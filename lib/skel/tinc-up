#!/bin/sh

# Estas IPs las genera lib/lvpn-update-skel
LVPN_SUBNET6="{{LVPN_SUBNET6}}"
LVPN_SUBNET="{{LVPN_SUBNET}}"
HOST_FILE="/etc/tinc/${NETNAME}/hosts/${NAME}"

# Tomar la IP desde el archivo de configuración y descartar el prefijo
get_ip() {
  grep "Subnet" "${HOST_FILE}" | \
    grep -m 1 "${1}" | cut -d"=" -f2 | cut -d"/" -f"1" | tr -d " "
}

get_port() {
  grep "Port" "${HOST_FILE}" | \
    cut -d "=" -f2 | tr -d " "
}

# Obtiene la IPv4 de la ruta por defecto
# route funciona en openwrt
get_default_route_ipv4() {
  type ip &>/dev/null && ip route | grep default | cut -d " " -f3 
  type route &>/dev/null && route -n | grep UG | tr -s " " | cut -d " " -f2
}

# Obtiene la IPv4 local para la ruta por defecto
# TODO encontrar una forma más simple?
get_default_ipv4() {
  type tracepath &>/dev/null && t=tracepath && h=1 && c=3
  type traceroute &>/dev/null && t=traceroute && h=2 && c=3

  ${t} -n $(get_default_route_ipv4) | \
    head -n${h} | \
    tr -s " " | \
    cut -d " " -f ${c} | \
# Sólo para traceroute porque el head+2 trae dos ips
    tail -n 1
}

# Obtener las IPs del archivo de conf y agregar los prefijos de subnet
# originales
LVPN_SUBNET6="$(get_ip "${LVPN_SUBNET6%%::*}:.*/128")/${LVPN_SUBNET6##*/}"
LVPN_SUBNET="$(get_ip "${LVPN_SUBNET%%.*}\..*/32")/${LVPN_SUBNET##*/}"

# No aceptar IPv6 desde otro lado
sysctl -w net.ipv6.conf.${INTERFACE}.accept_ra=0

# Soporte para cosas deprecadas: IPv4 e ifconfig
if which ip &>/dev/null; then
  test ! -z "${LVPN_SUBNET6}" && ip address add ${LVPN_SUBNET6} dev ${INTERFACE}
  test ! -z "${LVPN_SUBNET}"  && ip address add ${LVPN_SUBNET}  dev ${INTERFACE}

  ip link set ${INTERFACE} up
else
  test ! -z "${LVPN_SUBNET6}" && ifconfig ${INTERFACE} ${LVPN_SUBNET6}
  test ! -z "${LVPN_SUBNET}"  && ifconfig ${INTERFACE} ${LVPN_SUBNET}

  ifconfig ${INTERFACE} up
fi

# Controlar esto desde /etc/babeld.conf
# TODO descomentar cuando tengamos una config por defecto de babeld
# which babeld &>/dev/null && babeld -D 

# TODO poner lvpn discover acá
# TODO poner upnp/nat-pmp acá

if type upnpc &>/dev/null; then
  upnpc -a $(get_default_ipv4) $(get_port) $(get_port) tcp
  upnpc -a $(get_default_ipv4) $(get_port) $(get_port) udp
fi
